{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClickParam","onClick","style","backgroundColor","className","defaultProps","Header","title","toggleActionAdd","showAddTaskProp","location","useLocation","pathname","Footer","to","Task","taskObject","deleteProp","toggleProp","reminder","onDoubleClick","id","cursor","dayntime","Tasks","collection","actionDelete","actionToggle","map","task","index","Addtask","actionAdd","useState","setText","setDayntime","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","textAlign","App","showAddTask","setShowAddTask","arrTasks","setArrTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","response","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","exact","path","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9281662a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClickParam }) => {\n  return (\n    <button onClick={onClickParam} style={{backgroundColor: color}} className='btn'>{text}</button>\n  );\n}\n\nButton.defaultProps = {\n  color: 'green',\n  text: 'Add'\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button;\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom';\nimport Button from './Button';\n\nconst Header = ({ title, toggleActionAdd, showAddTaskProp }) => {\n\n  // const onClickFuncMethod = () => {\n  //   console.log('click')\n  // }\n\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      {/* <Button onClickParam={onClickFuncMethod} /> */}\n      \n      {location.pathname === '/' && <Button \n        onClickParam={toggleActionAdd} \n        text={showAddTaskProp ? 'close' : 'add'}\n        color={showAddTaskProp ? 'red' : 'green'}\n      />}\n\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import { Link as Lf } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      {/* <a href=\"/about\">About</a> */}\n      <Lf to='/about'>About</Lf>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ taskObject, deleteProp, toggleProp }) => {\n  return (\n    <div \n      className={\n        `task ${taskObject.reminder ? 'reminder' : ''}`\n      }\n      \n      // js function\n      onDoubleClick={() => toggleProp(taskObject.id)}\n    >\n      \n      <h3>\n        {taskObject.text}\n        <FaTimes \n          style={{\n            color: 'red',\n            cursor: 'pointer'\n          }}\n          // js function\n          // onClick={deleteProp}\n          onClick={() => deleteProp(taskObject.id)}\n        />\n      </h3>\n      \n      <p>{taskObject.dayntime}</p>\n    </div>\n  );\n}\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ collection, actionDelete, actionToggle }) => {\n  return (\n    <>\n      {collection.map((task, index) => (\n        // <Task key={task.id}>{task.text}</Task>\n        <Task \n          key={index} \n          taskObject={task} \n          deleteProp={actionDelete}\n          toggleProp={actionToggle}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst Addtask = ({ actionAdd }) => {\n  const [text,     setText]     = useState('')\n  const [dayntime,  setDayntime]  = useState('')\n  const [reminder, setReminder] = useState(false)\n  const onSubmitfunc = (e) => {\n    e.preventDefault()\n\n    if(!text) {\n      alert('write text please')\n      return\n    }\n\n    actionAdd({ text, dayntime, reminder })\n\n    setText('')\n    setDayntime('')\n    setReminder(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmitfunc}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input \n          type='text' \n          placeholder='add task' \n          value={text} \n          onChange={(e) => setText(e.target.value)} \n        />\n      </div>\n      \n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input \n          type='text' \n          placeholder='add day n time'\n          value={dayntime} \n          onChange={(e) => setDayntime(e.target.value)} \n        />\n      </div>\n      \n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input \n          type='checkbox'\n          checked={reminder}\n          value={reminder} \n          onChange={(e) => setReminder(e.currentTarget.checked)} \n        />\n      </div>\n\n      <input type='submit' value='save task' className='btn btn-block'/>\n    </form>\n  );\n}\n\nexport default Addtask;\n","import { Link as L } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div style={{textAlign: \"center\"}}>\n      <h4>Version 1.0.0</h4>      \n      {/* <a href='/'>Go Back</a> */}\n      <L to='/'>Go Back</L>\n    </div>\n  );\n}\n\nexport default About;\n","import { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport Addtask from \"./components/AddTask\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  \n  const [arrTasks, setArrTasks] = useState([\n  // move to db.json\n  ])\n\n  useEffect(\n    () => {\n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks()\n        setArrTasks(tasksFromServer)\n      }\n\n      // return\n      getTasks()\n    }, \n\n    // passing dependencies\n    []\n  )\n\n  // fetch tasks\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:5000/tasks')\n    const data = await response.json()\n    \n    // console.log(data)\n    return data\n  }\n\n  // fetch task\n  const fetchTask = async (id) => {\n    const response = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await response.json()\n    \n    // console.log(data)\n    return data\n  }\n\n  // addTask action\n  const addTask = async (taskObject) => {\n    // console.log(taskbject)\n    \n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...taskObject }\n    // setArrTasks([...arrTasks, newTask])\n\n    const response = await fetch('http://localhost:5000/tasks/', {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(taskObject)\n    })\n\n    const data = await response.json()\n    setArrTasks([...arrTasks, data])\n  }\n\n  // deleteTask action\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    // console.log('delete', id)\n    setArrTasks(\n      arrTasks.filter(\n        (task) => task.id !== id\n      )\n    )\n  }\n\n  // toggle reminder\n  const toggleReminder = async (id) => {\n    // console.log(id)\n\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = { \n      ...taskToToggle, \n      reminder: !taskToToggle.reminder \n    }\n\n    const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await response.json()\n\n    setArrTasks(\n      arrTasks.map(\n        (task) => task.id === id \n        ? { ...task, reminder: data.reminder } \n        : task\n      )\n    )\n  }\n  \n  return (\n    <Router>\n      <div className=\"container\">\n        {/* makes button add toggling */}\n        <Header \n          toggleActionAdd={\n            () => setShowAddTask(!showAddTask)\n          }\n          showAddTaskProp={showAddTask}\n        />\n        \n        <Route \n          exact\n          path='/'\n          render={(props) => (\n              <>\n                {/* if task added, show it */}\n                {showAddTask && <Addtask actionAdd={addTask} />}\n\n                {/* rendering all tasks */}\n                {\n                  arrTasks.length > 0\n                  ? <Tasks \n                      collection={arrTasks} \n                      actionDelete={deleteTask}\n                      actionToggle={toggleReminder}\n                    />\n                  : 'No Tasks to show'\n                }\n              </>\n            )\n          } \n        />\n        \n        <Route path='/about' component={About} />\n\n        <Footer />\n        \n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}